[
    {
        "label": "sqrt",
        "importPath": "math",
        "description": "math",
        "isExtraImport": true,
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "atan2",
        "importPath": "math",
        "description": "math",
        "isExtraImport": true,
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "sin",
        "importPath": "math",
        "description": "math",
        "isExtraImport": true,
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "cos",
        "importPath": "math",
        "description": "math",
        "isExtraImport": true,
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "pi",
        "importPath": "math",
        "description": "math",
        "isExtraImport": true,
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "e",
        "importPath": "math",
        "description": "math",
        "isExtraImport": true,
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "Person",
        "importPath": "people",
        "description": "people",
        "isExtraImport": true,
        "detail": "people",
        "documentation": {}
    },
    {
        "label": "uniform",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "randint",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "pygame,",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pygame.",
        "description": "pygame.",
        "detail": "pygame.",
        "documentation": {}
    },
    {
        "label": "exit",
        "importPath": "sys",
        "description": "sys",
        "isExtraImport": true,
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "pyautogui,",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pyautogui.",
        "description": "pyautogui.",
        "detail": "pyautogui.",
        "documentation": {}
    },
    {
        "label": "pygame.freetype,",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pygame.freetype.",
        "description": "pygame.freetype.",
        "detail": "pygame.freetype.",
        "documentation": {}
    },
    {
        "label": "LineProfiler",
        "importPath": "line_profiler",
        "description": "line_profiler",
        "isExtraImport": true,
        "detail": "line_profiler",
        "documentation": {}
    },
    {
        "label": "world_y_size",
        "importPath": "main",
        "description": "main",
        "isExtraImport": true,
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "clock",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "clock = pygame.time.Clock()\nscreen_x = 2560\nscreen_y = 1440\nworld_x_size = 2560\nworld_y_size = 1440\npygame.init()\nscreen = pygame.display.set_mode((screen_x,screen_y))\npygame.display.set_caption(\"main\")\ncamera_x = screen_x/2\ncamera_y = screen_y/2",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "screen_x",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "screen_x = 2560\nscreen_y = 1440\nworld_x_size = 2560\nworld_y_size = 1440\npygame.init()\nscreen = pygame.display.set_mode((screen_x,screen_y))\npygame.display.set_caption(\"main\")\ncamera_x = screen_x/2\ncamera_y = screen_y/2\nzoom = 1",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "screen_y",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "screen_y = 1440\nworld_x_size = 2560\nworld_y_size = 1440\npygame.init()\nscreen = pygame.display.set_mode((screen_x,screen_y))\npygame.display.set_caption(\"main\")\ncamera_x = screen_x/2\ncamera_y = screen_y/2\nzoom = 1\npeople = [Person(x = randint(0,world_x_size)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "world_x_size",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "world_x_size = 2560\nworld_y_size = 1440\npygame.init()\nscreen = pygame.display.set_mode((screen_x,screen_y))\npygame.display.set_caption(\"main\")\ncamera_x = screen_x/2\ncamera_y = screen_y/2\nzoom = 1\npeople = [Person(x = randint(0,world_x_size)\n                 y = randint(0,world_y_size))",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "world_y_size",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "world_y_size = 1440\npygame.init()\nscreen = pygame.display.set_mode((screen_x,screen_y))\npygame.display.set_caption(\"main\")\ncamera_x = screen_x/2\ncamera_y = screen_y/2\nzoom = 1\npeople = [Person(x = randint(0,world_x_size)\n                 y = randint(0,world_y_size))\n                 for i in range(300)]",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "screen",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "screen = pygame.display.set_mode((screen_x,screen_y))\npygame.display.set_caption(\"main\")\ncamera_x = screen_x/2\ncamera_y = screen_y/2\nzoom = 1\npeople = [Person(x = randint(0,world_x_size)\n                 y = randint(0,world_y_size))\n                 for i in range(300)]\nfor i in range(500000):\n    for event in pygame.event.get():",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "camera_x",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "camera_x = screen_x/2\ncamera_y = screen_y/2\nzoom = 1\npeople = [Person(x = randint(0,world_x_size)\n                 y = randint(0,world_y_size))\n                 for i in range(300)]\nfor i in range(500000):\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n            pygame.quit()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "camera_y",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "camera_y = screen_y/2\nzoom = 1\npeople = [Person(x = randint(0,world_x_size)\n                 y = randint(0,world_y_size))\n                 for i in range(300)]\nfor i in range(500000):\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n            pygame.quit()\n            exit()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "zoom",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "zoom = 1\npeople = [Person(x = randint(0,world_x_size)\n                 y = randint(0,world_y_size))\n                 for i in range(300)]\nfor i in range(500000):\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n            pygame.quit()\n            exit()\n    keys = pygame.key.get_pressed()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "people",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "people = [Person(x = randint(0,world_x_size)\n                 y = randint(0,world_y_size))\n                 for i in range(300)]\nfor i in range(500000):\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n            pygame.quit()\n            exit()\n    keys = pygame.key.get_pressed()\n    move_speed = 5/zoom",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "Person",
        "kind": 6,
        "importPath": "people",
        "description": "people",
        "peekOfCode": "class Person:\n    def __init__(self,\n                 x,\n                 y,\n                 direction,\n                 target,\n                 genes,\n                 age,\n                 postnatal_elapsed,\n                 gestation_period,",
        "detail": "people",
        "documentation": {}
    },
    {
        "label": "Genes",
        "kind": 6,
        "importPath": "people",
        "description": "people",
        "peekOfCode": "class Genes:\n    def __init__(self,\n                 size,\n                 speed,\n                 vision_range,\n                 fertility,\n                 virility,\n                 male_chance,\n                 gestation_period):\n        self.size = size",
        "detail": "people",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "kind": 6,
        "importPath": "simulation",
        "description": "simulation",
        "peekOfCode": "class Simulation:\n    def __init__(self):\n        self.people = []\n        self.sources = []\n        self.graphs = []\n        self.day = 0\n        self.year_length = 365\n        self.mutation_rate = 1",
        "detail": "simulation",
        "documentation": {}
    }
]