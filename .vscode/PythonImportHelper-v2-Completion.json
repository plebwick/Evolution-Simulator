[
    {
        "label": "pygame",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pygame",
        "description": "pygame",
        "detail": "pygame",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "simulation",
        "description": "simulation",
        "isExtraImport": true,
        "detail": "simulation",
        "documentation": {}
    },
    {
        "label": "uniform",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "randint",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "uniform",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "randint",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "randint",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "uniform",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "randint",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "uniform",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "math",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "math",
        "description": "math",
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "pi",
        "importPath": "math",
        "description": "math",
        "isExtraImport": true,
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "sin",
        "importPath": "math",
        "description": "math",
        "isExtraImport": true,
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "cos",
        "importPath": "math",
        "description": "math",
        "isExtraImport": true,
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "pi",
        "importPath": "math",
        "description": "math",
        "isExtraImport": true,
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "sqrt",
        "importPath": "math",
        "description": "math",
        "isExtraImport": true,
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "atan2",
        "importPath": "math",
        "description": "math",
        "isExtraImport": true,
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "e",
        "importPath": "math",
        "description": "math",
        "isExtraImport": true,
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "pi",
        "importPath": "math",
        "description": "math",
        "isExtraImport": true,
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "ceil",
        "importPath": "math",
        "description": "math",
        "isExtraImport": true,
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "time",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "time",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "perf_counter",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "pygame,",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pygame.",
        "description": "pygame.",
        "detail": "pygame.",
        "documentation": {}
    },
    {
        "label": "Source",
        "importPath": "sources",
        "description": "sources",
        "isExtraImport": true,
        "detail": "sources",
        "documentation": {}
    },
    {
        "label": "Graph",
        "importPath": "graph",
        "description": "graph",
        "isExtraImport": true,
        "detail": "graph",
        "documentation": {}
    },
    {
        "label": "Person",
        "importPath": "people",
        "description": "people",
        "isExtraImport": true,
        "detail": "people",
        "documentation": {}
    },
    {
        "label": "Genes",
        "importPath": "people",
        "description": "people",
        "isExtraImport": true,
        "detail": "people",
        "documentation": {}
    },
    {
        "label": "defaultdict",
        "importPath": "collections",
        "description": "collections",
        "isExtraImport": true,
        "detail": "collections",
        "documentation": {}
    },
    {
        "label": "Graph",
        "kind": 6,
        "importPath": "graph",
        "description": "graph",
        "peekOfCode": "class Graph:\n    def __init__(self,\n                 gene,\n                 colour,\n                 display,\n                 values = []):\n        self.gene = gene\n        self.colour = colour\n        self.display = display\n        self.values = values",
        "detail": "graph",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def main():\n    pygame.init()\n    clock = pygame.time.Clock()\n    sim = Simulation()\n    screen = pygame.display.set_mode((sim.screen_x,sim.screen_y))\n    pygame.display.set_caption(\"Evolution Simulation\")\n    sim.create_people()\n    sim.create_sources()\n    sim.create_graphs()\n    #######temp",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "Genes",
        "kind": 6,
        "importPath": "people",
        "description": "people",
        "peekOfCode": "class Genes:\n    def __init__(self,\n                 size,\n                 speed,\n                 agility,\n                 wander_agility,\n                 vision_range,\n                 vision_angle,\n                 fertility,\n                 virility,",
        "detail": "people",
        "documentation": {}
    },
    {
        "label": "Person",
        "kind": 6,
        "importPath": "people",
        "description": "people",
        "peekOfCode": "class Person:\n    def __init__(self,\n                 x,\n                 y,\n                 grid,\n                 direction,\n                 target,\n                 mate,\n                 alive,\n                 sex,",
        "detail": "people",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "kind": 6,
        "importPath": "simulation",
        "description": "simulation",
        "peekOfCode": "class Simulation:\n    def __init__(self):\n        self.people = []\n        self.sources = []\n        self.permanent_sources = []\n        self.gene_dict = {\n            \"size\": \"blue\",\n            \"speed\": \"red\",\n            \"agility\": \"yellow\",\n            \"wander_agility\":\"indigo\",",
        "detail": "simulation",
        "documentation": {}
    },
    {
        "label": "Source",
        "kind": 6,
        "importPath": "sources",
        "description": "sources",
        "peekOfCode": "class Source:\n    def __init__(self,\n                 x,\n                 y,\n                 grid,\n                 type):\n        self.x,self.y = (x,y)\n        self.grid = grid\n        self.type = type\n    def respawn(sim):",
        "detail": "sources",
        "documentation": {}
    }
]